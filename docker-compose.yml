version: '3.8'

services:
  app:
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: .
      dockerfile: Dockerfile
    container_name: microblogging
    depends_on:
      - db
    environment:
      # PostgreSQL configuration
      - POSTGRES_USER=usermicro
      - POSTGRES_PASSWORD=4+50Ra9
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/microblogging
      - SPRING_DATASOURCE_USERNAME=usermicro
      - SPRING_DATASOURCE_PASSWORD=4+50Ra9
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      
      # RabbitMQ configuration
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=root
      - SPRING_RABBITMQ_PASSWORD=root
      
      # Redis configuration
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    ports:
      - "8080:8080"
  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_USER=usermicro
      - POSTGRES_PASSWORD=4+50Ra9
      - POSTGRES_DB=microblogging
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
      - "15672:15672"  # Puerto de la UI de RabbitMQ
      - "5672:5672"    # Puerto para conexi√≥n AMQP
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=root
    #networks:
    #  - app-network
  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"  # Puerto por defecto de Redis
    #networks:
    #  - app-network

volumes:
  postgres_data:
  cache:
